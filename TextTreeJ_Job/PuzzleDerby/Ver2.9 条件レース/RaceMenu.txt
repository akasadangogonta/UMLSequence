RaceMenu.cs
>GameScenes/MainMenu/Scripts/RaceMenu

public enum RaceMenuPhase
{
  Top,
  MultiSelect,  // multi 
  HostSelect,   // multi 
  NormalTop,
  NormalRace,
  SpecialTop,ig
  SpecialRace,
  Helper,
  Confirm,
  RankingEventTop,
  RankingEventRace,

  // multi
  MultiConfirm,		// my team select.
  MultiLobbySelect,	// guest only.
  MultiComment,     // host only.
  MultiLobby		// host only.
}
public enum RaceType
{
  Normal = 0,
  Special,
  Ranking,
  MyCoop,
  RequestCoop
}
public enum ModelType
{
  High = 0,
  Low
}
public enum Category
{
  None = -1,
  None0,
  Sex,
  Cost,
  Element,
  Type,
  Rare,
  Same,
  Horse,
  Card
}

public enum RoomType
{
  Create = 0,
  Join
}

　Line15付近
　マルチでのチーム、配列は３で、一つ目はホスト、二つ目と３つ目がゲスト
  public MultiLobbyItem[]  multiLobbyItems;

  Line35付近
　enum型の変更
  public enum Category

　Line460付近
　レースデータの一括読み込み
   cmdRaceList.ExecCmd(isMulti); 

　Line500付近
　フッターのレースを選んでから最初の分岐画面「ﾏﾙﾁ」えらんだとき
  void TouchMultiSelectMain( ) {
  一番したの    case MultiSelectButtonType.Guest:
　のときにMultiConfirmのCreateDataに飛ぶが、
　これたぶんよばれない

　Line505付近
　非ホスト時のMultiConrim.Createへの移行
　  void TouchMultiSelectMain( ) {
　  instanceMultiConfirm.CreateData("", "", MultiLobbyStatus.multiType, TouchMultiConfirm);

　Line515付近
　臨時的なMultiでのConfirm判定回避策（Multiの場合Confirmが最終確認画面ではなく、MultiLobbyがまだあるので）
　  void TouchMultiConfirm() {

　重要
　Line561
　実際にTouchLobbySelectが呼ばれる前、一番最初にLobbySelectItemがTouchされたときに呼ばれる場所
　  void InLobbySelect() {

　Line７００付近
　ゲストがロビールームをクリックした瞬間に実行される関数
　ここでゲストのメンバー情報を送っている
　  void TouchLobbySelect(MultiLobbySelectItem lobbyItem) {

  Line735付近
　ロビー画面をクリエイトするための関数
　 void InLobby(DefaultCallback cancelCallback) {

　Ｌｉｎｅ775
　ＮｗＣｍｄＭｕｌｔｉＧｕｅｓｔＥｎｔｒｙＣａｎｃｅｌのJSONのやりとりが実装されている
　このJOSNって既に人が満杯のときのやつ？
NwCmdMultiGuestEntry.ErrorType.AlreadyEntry)のときしか呼ばれない、かなり限定的
  void TouchLobbySelect_Already(MultiLobbySelectItem lobbyItem) {


  Line855付近
　ノーマルレースの方はこっちでRaceDataにステージ情報を代入している。
  private void InNormalSubList( NwDataRaceData raceData , NwDataRaceData raceFriendData )

　Line870付近
　RaceDataへ各ステージデータをぶちこんでいる関数、鳥獣用
  public void TouchNormalSubRaceTitle( RaceSubListItem touchItem )
  {

  Line880,950,1025付近
  NwDataRaceListのNwDataRaceDataの中のNwDataStageDataの中の
  パラメータをRaceDataに移している
  正確にはRaceSubListItemの中のNwDataStageDataで宣言された
  dataの中身をRaceDataに移している。ちなみにRaceDataはほとんどstatic変数で
　構成されている。
  TouchNormalSubRaceTitle
  TouchEventSubRaceTitle
  TouchRankingEventSubRaceTitl

  Line1030付近
　ホスト時のMultiConfirmのCreateDataに飛ぶ直前の処理（ホストになるとき）
  private void TouchSubRaceTitle()
  instanceMultiConfirm.CreateData(RaceData.ChapterName, RaceData.StageName, MultiLobbyStatus.multiType, TouchMultiConfirm);
（　Line505付近
　　ゲスト時のMultiConrim.Createへの移行
　  void TouchMultiSelectMain( ) {
　  instanceMultiConfirm.CreateData("", "", MultiLobbyStatus.multiType, TouchMultiConfirm);

　Line1060付近
　　ホストマルチ選択時にRaceDataに各種データを突っ込む場所
　  public void TouchEventSubRaceTitle( RaceSubListItem touchItem  )

　Line1145付近
　RaceConfirmのCreateDataに飛ぶ直前の処理
  private void SetConfirm( NwDataUserData data )
　すごい短い
　
　Line1200付近
　Phaseの変更、ここでcurPhaseも変えている。
   private IEnumerator ChangePhase( RaceMenuPhase phase )

　Line1350付近 
  レース条件のエラー判定
  public void StartRace()

　Line1930付近
　 マルチレースで条件付の比較
  private void CheckMultiCondition(MultiConfirmCheckCallback Success )
  {

　instanceRaceConfirm.CreateData


