GameLogic.PlayerAttack 　　　GameLogic.cs:3842

GameLogic.AddTreasures　　　GameLogic.cs:4006

TreasureAnim.StartAnim 　　　TreasureAnim.cs:52



  public void StartAnim( PuzzleTreasureType type, EndTreasureAnimCallback callback = null )
  {
ぱっと見全然わからんあ
tyoeはmoneyかhorseだけ
    SetType ( type );

まあなんかわからんがコールバックセットしとるな

    this.callback = callback;
    isPlay = true;
    
    // パスの調整
    path[0] = this.transform.localPosition;
    path[1].x = (path[0].x + path[2].x ) / 2.0f;
    path[1].y = (path[0].y + path[2].y ) / 2.0f + 30.0f;
    
   typeがitemの時だから実質ここからか
　　なんだ、最大二個しか出ないのか

    else
    {
      Vector3[] capsulePath = new Vector3[2];
      capsulePath[0] = this.transform.localPosition;
      // 複数個対策で座標にバラ付きを持たせてみる.
      capsulePath[0].x += Random.Range( -10, 10 );
      this.transform.localPosition = capsulePath[0];

      capsulePath[1] = new Vector3( capsulePath[0].x, capsulePath[0].y - 30, capsulePath[0].z );

	ん？ここだけか？？

      iTween.MoveTo
        (
          this.gameObject, 
          iTween.Hash 
          (
          "path", capsulePath,
          "time", 0.5f,
          "oncompletetarget", this.gameObject,
          "oncomplete", "StopCapsule",
          "easetype", iTween.EaseType.linear
          )
          );
      SoundManager.Instance.PlaySe( SoundManager.SeType.DropCapsule );
    }

    if( type == PuzzleTreasureType.Money )
    {
      StartCoroutine( UpdateAnim() );
      StartCoroutine( UpdateScaleAnim() );
    }
    else
    {
      StartCoroutine( UpdateCapselScaleAnim() );
    }


capsulePath[0].x += Random.Range( -10, 10 );
this.transform.localPosition = capsulePath[0];

capsulePath[1] = new Vector3( capsulePath[0].x, capsulePath[0].y - 30, capsulePath[0].z );

なんだよ+=って、-10から＋１０までの値をxにランダムに入れると？
      this.transform.localPosition = capsulePath[0];
そしてこれなんだ
      Vector3[] capsulePath = new Vector3[2];
capsulePathはこの関数の中で直前に作ってる変数だから
使うとしたらこの関数以外ではない
んで、

capsulePath[0]は実際にここでthis.transformlocalPositionとして使ってるけど











    // 複数個対策で座標にバラ付きを持たせてみる.
    int countLimit = 10;
    int value = Random.Range( -10, 10 );

    for(int count = 0; count < countLimit; count++)
    {
      bool flag = false;
      if(randamX.Count != 0)
      {
        foreach (var item in randamX) 
        {
          if (Mathf.Abs(value - item) >= 5)
          {
            break;
          }
        }
      }
      else
      {
        break;
      }
    }
    randamX.Add(value);
