//using System.Drawing;

//描画先とするImageオブジェクトを作成する
Bitmap canvas = new Bitmap(PictureBox1.Width, PictureBox1.Height);
//ImageオブジェクトのGraphicsオブジェクトを作成する
Graphics g = Graphics.FromImage(canvas);

//Penオブジェクトの作成(幅5の黒色)
Pen blackPen   = new Pen(Color.Black, 5);

//幅5の黒色で四角を描く
g.DrawRectangle(blackPen, 10, 10, 50, 50);
//幅1の黄色で四角を描く
g.DrawRectangle(Pens.Yellow, 10, 10, 50, 50);

//ペンの配置をInsetに変更する
blackPen.Alignment = System.Drawing.Drawing2D.PenAlignment.Inset;
//幅5の黒色で四角を描く
g.DrawRectangle(blackPen, 70, 10, 50, 50);
//幅1の黄色で四角を描く
g.DrawRectangle(Pens.Yellow, 70, 10, 50, 50);

//リソースを解放する
blackPen.Dispose();
g.Dispose();

//PictureBox1に表示する
PictureBox1.Image = canvas;





C#

コードを隠すコードを選択
//using System.Drawing;

protected override void OnPaint(PaintEventArgs e)
{
    base.OnPaint (e);
    
    //Penを用意する
    Pen redPen = new Pen(Color.Red, 0.1f * e.Graphics.DpiX);

    //太さ0.1インチで4X2インチの長方形を描画
    e.Graphics.DrawRectangle(redPen,
        0.2f * e.Graphics.DpiX, 0.4f * e.Graphics.DpiX,
        4 * e.Graphics.DpiX, 2 * e.Graphics.DpiX);

    //Penを破棄
    redPen.Dispose();
}





破線を描くには、線を描くときに使用するPenオブジェクトのDashStyleプロパティをDashStyle.Dashなどに変更します。線の描き方はここでは説明しませんので、「線を描く」や「曲線を描く」等をご覧ください。

DashStyleプロパティに指定できる値（DashStyle列挙体の値）とそれを指定した時に描画される線の形状を表にまとめると、以下のようになります。


DashStyle列挙体のメンバ名

説明（MSDNより）

画像
Solid 実線を指定します。 Solid 
Dash ダッシュで構成される直線を指定します。 Dash 
Dot ドットで構成される直線を指定します。 Dot 
DashDot ダッシュとドットの繰り返しパターンで構成される直線を指定します。 DashDot 
DashDotDot ダッシュと 2 つのドットの繰り返しパターンで構成される直線を指定します。 DashDotDot 
Custom ユーザー定義のカスタム ダッシュ スタイルを指定します。  

次の例では、DashStyleプロパティの値をいろいろ変えて直線を描画しています。

C#

コードを隠すコードを選択
//using System.Drawing;
//using System.Drawing.Drawing2D;
//がソースファイルの一番上に書かれているものとする

//描画先とするImageオブジェクトを作成する
Bitmap canvas = new Bitmap(PictureBox1.Width, PictureBox1.Height);
//ImageオブジェクトのGraphicsオブジェクトを作成する
Graphics g = Graphics.FromImage(canvas);

//Penオブジェクトの作成(幅5の黒色)
Pen blackPen   = new Pen(Color.Black, 5);

//ダッシュ
blackPen.DashStyle = DashStyle.Dash;
//線を描画
g.DrawLine(blackPen, 10, 10, 200, 10);

//ダッシュとドット
blackPen.DashStyle = DashStyle.DashDot;
//線を描画
g.DrawLine(blackPen, 10, 30, 200, 30);

//ダッシュと2つのドット
blackPen.DashStyle = DashStyle.DashDotDot;
//線を描画
g.DrawLine(blackPen, 10, 50, 200, 50);

//ドット
blackPen.DashStyle = DashStyle.Dot;
//線を描画
g.DrawLine(blackPen, 10, 70, 200, 70);

//実線
blackPen.DashStyle = DashStyle.Solid;
//線を描画
g.DrawLine(blackPen, 10, 90, 200, 90);

//リソースを解放する
blackPen.Dispose();
g.Dispose();

//PictureBox1に表示する
PictureBox1.Image = canvas;




破線の終点の形を変更する

破線の終点の形はPen.DashCapプロパティで変更できます。Pen.DashCapプロパティに指定できる値（DashCap列挙体の値）とそれを指定した時に描画される線の形状を表にまとめると、以下のようになります。


DashCap列挙体のメンバ名

説明（MSDNより）

画像

Flat 各ダッシュの両端を直角にする、四角形キャップを指定します。 Flat 
Round 各ダッシュの両端を丸くする、円形キャップを指定します。 Round 
Triangle 各ダッシュの両端を三角形にする、三角形キャップを指定します。 Triangle 

C#

コードを隠すコードを選択
//using System.Drawing;
//using System.Drawing.Drawing2D;
//がソースファイルの一番上に書かれているものとする

//描画先とするImageオブジェクトを作成する
Bitmap canvas = new Bitmap(PictureBox1.Width, PictureBox1.Height);
//ImageオブジェクトのGraphicsオブジェクトを作成する
Graphics g = Graphics.FromImage(canvas);

//Penオブジェクトの作成(幅5の黒色)
Pen blackPen = new Pen(Color.Black, 5);

//ダッシュとドット
blackPen.DashStyle = DashStyle.DashDot;
//線を描画
g.DrawLine(blackPen, 10, 10, 200, 10);

//キャップスタイルをRoundにする
blackPen.DashCap = DashCap.Round;
//線を描画
g.DrawLine(blackPen, 10, 30, 200, 30);

//キャップスタイルをTriangleにする
blackPen.DashCap = DashCap.Triangle;
//線を描画
g.DrawLine(blackPen, 10, 50, 200, 50);

//リソースを解放する
blackPen.Dispose();
g.Dispose();

//PictureBox1に表示する
PictureBox1.Image = canvas;




